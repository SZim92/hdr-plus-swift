name: 'Setup Swift on Ubuntu'
description: 'Sets up Swift environment on Ubuntu with support for different Ubuntu versions'

inputs:
  swift-version:
    description: 'Swift version to install'
    required: false
    default: '5.9'

runs:
  using: "composite"
  steps:
    - name: Detect Ubuntu version
      id: ubuntu-version
      shell: bash
      run: |
        UBUNTU_VERSION=$(lsb_release -rs)
        echo "ubuntu_version=$UBUNTU_VERSION" >> $GITHUB_OUTPUT
        echo "Detected Ubuntu version: $UBUNTU_VERSION"
        
        # Map newer Ubuntu versions to the closest supported version
        if [[ "$UBUNTU_VERSION" == "24.04" ]]; then
          echo "ubuntu_map_version=22.04" >> $GITHUB_OUTPUT
          echo "Using compatibility mapping: 24.04 -> 22.04"
        else
          echo "ubuntu_map_version=$UBUNTU_VERSION" >> $GITHUB_OUTPUT
        fi

    - name: Install Swift dependencies
      shell: bash
      run: |
        echo "Installing Swift dependencies..."
        sudo apt-get update
        sudo apt-get install -y \
          binutils \
          git \
          gnupg2 \
          libc6-dev \
          libcurl4-openssl-dev \
          libedit2 \
          libgcc-9-dev \
          libpython3.8 \
          libsqlite3-0 \
          libstdc++-9-dev \
          libxml2-dev \
          libz3-dev \
          pkg-config \
          tzdata \
          unzip \
          zlib1g-dev

    - name: Download and install Swift
      shell: bash
      run: |
        SWIFT_VERSION=${{ inputs.swift-version }}
        UBUNTU_VERSION=${{ steps.ubuntu-version.outputs.ubuntu_map_version }}
        
        # Convert version format (e.g., 22.04 -> 2204)
        UBUNTU_VERSION_NO_DOTS=$(echo "$UBUNTU_VERSION" | tr -d '.')
        
        # Official Swift toolchain URLs
        echo "Attempting to download Swift toolchain..."
        
        # Try the official Swift.org URL format
        SWIFT_TOOLCHAIN_URL="https://download.swift.org/swift-${SWIFT_VERSION}-release/ubuntu${UBUNTU_VERSION_NO_DOTS}/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu${UBUNTU_VERSION_NO_DOTS}.tar.gz"
        echo "Trying to download from: ${SWIFT_TOOLCHAIN_URL}"
        
        # Create a directory for the download
        mkdir -p /tmp/swift-download
        cd /tmp/swift-download
        
        if ! wget --tries=3 --timeout=30 --no-verbose "${SWIFT_TOOLCHAIN_URL}"; then
          echo "Failed to download from primary URL, trying alternative versions..."
          
          # Try a list of known Swift versions that are available for Ubuntu
          declare -a SWIFT_VERSIONS=("5.9.2" "5.8.1" "5.7.3" "5.6.3")
          
          for version in "${SWIFT_VERSIONS[@]}"; do
            echo "Trying Swift ${version}..."
            ALT_URL="https://download.swift.org/swift-${version}-release/ubuntu${UBUNTU_VERSION_NO_DOTS}/swift-${version}-RELEASE/swift-${version}-RELEASE-ubuntu${UBUNTU_VERSION_NO_DOTS}.tar.gz"
            
            if wget --tries=3 --timeout=30 --no-verbose "${ALT_URL}"; then
              echo "Successfully downloaded Swift ${version}"
              SWIFT_VERSION="${version}"
              SWIFT_PACKAGE="swift-${version}-RELEASE-ubuntu${UBUNTU_VERSION_NO_DOTS}"
              break
            fi
          done
        else
          SWIFT_PACKAGE="swift-${SWIFT_VERSION}-RELEASE-ubuntu${UBUNTU_VERSION_NO_DOTS}"
          echo "Downloaded Swift ${SWIFT_VERSION} successfully"
        fi
        
        # Check if we have a tar.gz file
        if ! ls *.tar.gz > /dev/null 2>&1; then
          echo "No Swift package downloaded. Using pre-installed Swift if available."
          if command -v swift &> /dev/null; then
            echo "Pre-installed Swift found:"
            swift --version
            exit 0
          else
            echo "No Swift package downloaded and no pre-installed Swift found."
            echo "Attempting to install Swift using apt..."
            sudo apt-get update
            sudo apt-get install -y swift
            
            if command -v swift &> /dev/null; then
              echo "Swift installed via apt:"
              swift --version
              exit 0
            else
              echo "Failed to install Swift. Aborting."
              exit 1
            fi
          fi
        fi
        
        echo "Extracting Swift package..."
        # List the downloaded files for debugging
        ls -la
        
        # Extract Swift with better error handling
        if ! tar xzf $(ls *.tar.gz | head -n 1); then
          echo "Failed to extract Swift package."
          exit 1
        fi
        
        echo "Installing Swift..."
        # Find the extracted package directory
        EXTRACTED_DIR=$(find . -maxdepth 1 -type d -name "swift-*" | head -n 1)
        if [ -z "$EXTRACTED_DIR" ]; then
          echo "Could not find extracted Swift package directory."
          exit 1
        fi
        
        # Remove the leading ./
        EXTRACTED_DIR=${EXTRACTED_DIR#./}
        
        # Move Swift to /usr/share and update PATH
        echo "Moving Swift to /usr/share/swift..."
        sudo mkdir -p /usr/share/swift
        sudo cp -R "$EXTRACTED_DIR"/* /usr/share/swift/
        
        echo "/usr/share/swift/usr/bin" >> $GITHUB_PATH
        
        # Verify installation
        echo "Swift installation complete. Attempting to verify..."
        export PATH="/usr/share/swift/usr/bin:$PATH"
        if command -v swift &> /dev/null; then
          swift --version
        else
          echo "Swift command not found in PATH after installation."
          echo "PATH is: $PATH"
          ls -la /usr/share/swift/usr/bin || echo "Swift bin directory not found"
        fi 